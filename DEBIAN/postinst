#!/bin/bash -x

set -e

#####
##### Read the commandline options
##### Only 'configure' is handled with processing, other actions
##### are ignored for now
#####
ACTION=${1}
ARG_VERSION=${2}

#####
##### Source the debconf library
#####

if [ -e "/usr/share/debconf/confmodule" ]; then
    . /usr/share/debconf/confmodule
else
    echo "debconf must be installed. Exiting."
    exit 1
fi

LONG_DATE=`date +%Y%m%d%H%M%S`

D1_LOG_DIR=/var/log/dataone
D1_LOG_FILE=dataone-cn-solr.install.log

#####
##### log()
##### append stdout to a logfile
#####
function log() 
{
	#
	# Set Up logging
	# Reminder: don't echo to stdout, it messes up debconf
	#
    if [ ! -e ${D1_LOG_DIR} ]; then
        mkdir -p ${D1_LOG_DIR}
        chown tomcat7:tomcat7 ${D1_LOG_DIR}
    fi
    now=$(date "+%Y-%m-%d %H:%M:%S %Z: ")
    echo -e "${now} postinst $@" >> ${D1_LOG_DIR}/${D1_LOG_FILE}
}


SOLR_USER=tomcat7
SOLR_ROOT=/var/solr
SOLR_HOME=${SOLR_ROOT}/server/solr
SEARCH_CONFIGS_DIR=${SOLR_HOME}/configsets/dataone_search_configs/
EVENT_LOG_CONFIGS_DIR=${SOLR_HOME}/configsets/dataone_event_log_configs/
SOLR_SERVER_PORT=8983

SEARCH_CORE_NAME=search_core
EVENT_LOG_CORE_NAME=event_core

# Zookeeper configuration
ZK_HOME=/var/lib/zookeeper
ZK_CONF_HOME=/var/lib/zookeeper/conf
ZK_CLIENT_PORT=2181
ZK_SERVER_PORT_1=2888
ZK_SERVER_PORT_2=3888
ZK_SERVER_ID_FILE=/var/lib/zookeeper/data/myid

# Substitution tokens used in config files like zoo.cfg, start.ini,etc
SERVER_1_TOKEN="D1_CN_IP_1"
SERVER_2_TOKEN="D1_CN_IP_2"
SERVER_3_TOKEN="D1_CN_IP_3"
ZK_CLIENT_PORT_TOKEN="D1_ZK_CLIENT_PORT"
ZK_SERVER_PORT_TOKEN_1="D1_ZK_SERVER_PORT_1"
ZK_SERVER_PORT_TOKEN_2="D1_ZK_SERVER_PORT_2"

log "start"

if ! (/etc/init.d/solr stop >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1); then
	log "solr refused to stop"
fi
if ! (/etc/init.d/zookeeper stop >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1); then
	log "zookeeper refused to stop"
fi

## Deploy and configure files that need variable subsitution
##### Parse node.properties to derive CN IP list.
db_get dataone-cn-os-core/cn.iplist
IP_LIST=(${RET})

SERVER_1=${IP_LIST[0]}
SERVER_2=${IP_LIST[1]}
SERVER_3=${IP_LIST[2]}

##### Use hostname command to derive local IP, used to set zookeeper server myid file.
MY_POSSIBLE_IPS=(`hostname --all-ip-addresses`)
for i in ${MY_POSSIBLE_IPS[@]}
do
	if [[ "${IP_LIST[@]}" =~ "${i}" ]]; then
		LOCAL_IP=${i}
	fi
done

### Substitute server IP and PORT numbers in config files at token locations
##### Configure apache mod proxy for to allow solr communication between CN nodes
#cp /usr/share/dataone-cn-solr/debian/modproxy_cnaudit ${APACHE_CONF_HOME}/modproxy_cnaudit
#if ! (sed -i "s/$SERVER_1_TOKEN/$SERVER_1/g" ${APACHE_CONF_HOME}/modproxy_cnaudit >> ${D1_LOG_DIR}/${D1_LOG_FILE}  2>&1); then
#	log "unable to set $SERVER_1 in modproxy_cnaudit"
#fi
#if ! (sed -i "s/$SERVER_2_TOKEN/$SERVER_2/g" ${APACHE_CONF_HOME}/modproxy_cnaudit >> ${D1_LOG_DIR}/${D1_LOG_FILE}  2>&1); then
#	log "unable to set $SERVER_2 in modproxy_cnaudit"
#fi
#if ! (sed -i "s/$SERVER_3_TOKEN/$SERVER_3/g" ${APACHE_CONF_HOME}/modproxy_cnaudit >> ${D1_LOG_DIR}/${D1_LOG_FILE}  2>&1); then
#	log "unable to set $SERVER_3 in modproxy_cnaudit"
#fi


# Copy search core configuration
if [ ! -d "$SEARCH_CONFIGS_DIR" ]; then
	FRESH_SEARCH_CORE_INSTALL="true"
	mkdir ${SEARCH_CONFIGS_DIR}
fi


cp -rf /usr/share/dataone-cn-solr/debian/dataone_search_configs/* ${SEARCH_CONFIGS_DIR}
chown -R ${SOLR_USER}:${SOLR_USER} ${SEARCH_CONFIGS_DIR}

cp /usr/share/dataone-cn-solr/debian/dataone_search_configs/conf/schema.xml /etc/dataone/index/schema.xml
chown ${SOLR_USER}:${SOLR_USER} /etc/dataone/index/schema.xml

# Copy event log core configuration
if [ ! -d "$EVENT_LOG_CONFIGS_DIR" ]; then
	FRESH_EVENT_LOG_CORE_INSTALL="true"
	mkdir ${EVENT_LOG_CONFIGS_DIR}
fi

cp -rf /usr/share/dataone-cn-solr/debian/dataone_event_log_configs/* ${EVENT_LOG_CONFIGS_DIR}
chown -R ${SOLR_USER}:${SOLR_USER} ${EVENT_LOG_CONFIGS_DIR}


cp /usr/share/dataone-cn-solr/debian/server_configs/solr.in.sh ${SOLR_ROOT}/
cp /usr/share/dataone-cn-solr/debian/server_configs/solr /etc/init.d/
chmod 755 /etc/init.d/solr
update-rc.d solr defaults
update-rc.d solr enable


##### Configure solr.in.sh with zookeeper server configuration
if ! (sed -i "s/$SERVER_1_TOKEN/$SERVER_1/g" ${SOLR_ROOT}/solr.in.sh >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1); then
	log "Unable to modify ${SOLR_ROOT}/solr.in.sh for $SERVER_1_TOKEN $SERVER_1"
fi
if ! (sed -i "s/$SERVER_2_TOKEN/$SERVER_2/g" ${SOLR_ROOT}/solr.in.sh >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1); then
	log "Unable to modify ${SOLR_ROOT}/solr.in.sh for $SERVER_2_TOKEN $SERVER_2"
fi
if ! (sed -i "s/$SERVER_3_TOKEN/$SERVER_3/g" ${SOLR_ROOT}/solr.in.sh >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1); then
	log "Unable to modify ${SOLR_ROOT}/start.in.sh for server $SERVER_3_TOKEN $SERVER_3"
fi
if ! (sed -i "s/$ZK_CLIENT_PORT_TOKEN/$ZK_CLIENT_PORT/g" ${SOLR_ROOT}/start.ini >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1); then
	log "Unable to modify ${SOLR_ROOT}/start.in.sh for $ZK_CLIENT_PORT_TOKEN $ZK_CLIENT_PORT"
fi


##### Configure zookeeper server configuration
mv ${ZK_CONF_HOME}/zoo.cfg ${ZK_CONF_HOME}/zoo.cfg.bak
cp /usr/share/dataone-cn-solr/debian/server_configs/zoo.cfg ${ZK_CONF_HOME}/zoo.cfg

if ! (sed -i "s/$SERVER_1_TOKEN/$SERVER_1/g" ${ZK_CONF_HOME}/zoo.cfg >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1); then
	log "Unable to modify ${ZK_CONF_HOME}/zoo.cfg for $SERVER_1_TOKEN $SERVER_1"
fi
if ! (sed -i "s/$SERVER_2_TOKEN/$SERVER_2/g" ${ZK_CONF_HOME}/zoo.cfg >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1); then
	log "Unable to modify ${ZK_CONF_HOME}/zoo.cfg for $SERVER_2_TOKEN $SERVER_2"
fi
if ! (sed -i "s/$SERVER_3_TOKEN/$SERVER_3/g" ${ZK_CONF_HOME}/zoo.cfg >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1); then
	log "Unable to modify ${ZK_CONF_HOME}/zoo.cfg for $SERVER_3_TOKEN $SERVER_3"
fi
if ! (sed -i "s/$ZK_CLIENT_PORT_TOKEN/$ZK_CLIENT_PORT/g" ${ZK_CONF_HOME}/zoo.cfg >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1); then
	log "Unable to modify ${ZK_CONF_HOME}/zoo.cfg for $ZK_CLIENT_PORT_TOKEN $ZK_CLIENT_PORT"
fi
if ! (sed -i "s/$ZK_SERVER_PORT_TOKEN_1/$ZK_SERVER_PORT_1/g" ${ZK_CONF_HOME}/zoo.cfg >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1); then
	log "Unable to modify ${ZK_CONF_HOME}/zoo.cfg for $ZK_CLIENT_PORT_TOKEN_1 $ZK_CLIENT_PORT_1"
fi
if ! (sed -i "s/$ZK_SERVER_PORT_TOKEN_2/$ZK_SERVER_PORT_2/g" ${ZK_CONF_HOME}/zoo.cfg ${ZK_CONF_HOME}/zoo.cfg >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1); then
	log "Unable to modify ${ZK_CONF_HOME}/zoo.cfg for $ZK_CLIENT_PORT_TOKEN_2 $ZK_CLIENT_PORT_2"
fi


##### Create zookeeper myid file for server 1, etc
if [[ $LOCAL_IP == $SERVER_1 ]]; then
  echo "1" > $ZK_SERVER_ID_FILE
elif [[ $LOCAL_IP == $SERVER_2 ]]; then
  echo "2" > $ZK_SERVER_ID_FILE
elif [[ $LOCAL_IP == $SERVER_3 ]]; then
  echo "3" > $ZK_SERVER_ID_FILE
else
  log "Unknown server IP, does not match IP form node.properties.  No zookeeper server myid file set."
fi
chown -R ${SOLR_USER}:${SOLR_USER} ${ZK_HOME}


### Firewall configuration to allow zookeeper communication
if ! (ufw allow from $SERVER_1 to any port $ZK_CLIENT_PORT >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1); then
	log "Unable to open ufw port $ZK_CLIENT_PORT for $SERVER_1 "
fi
if ! (ufw allow from $SERVER_2 to any port $ZK_CLIENT_PORT >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1); then
	log "Unable to open ufw port $ZK_CLIENT_PORT for $SERVER_2 "
fi
if ! (ufw allow from $SERVER_3 to any port $ZK_CLIENT_PORT >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1); then
	log "Unable to open ufw port $ZK_CLIENT_PORT for $SERVER_3 "
fi
if ! (ufw allow from $SERVER_1 to any port $ZK_SERVER_PORT_1 >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1); then
	log "Unable to open ufw port $ZK_SERVER_PORT_1 for $SERVER_1 "
fi
if ! (ufw allow from $SERVER_2 to any port $ZK_SERVER_PORT_1 >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1); then
	log "Unable to open ufw port $ZK_SERVER_PORT_1 for $SERVER_2 "
fi
if ! (ufw allow from $SERVER_3 to any port $ZK_SERVER_PORT_1 >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1); then
	log "Unable to open ufw port $ZK_SERVER_PORT_1 for $SERVER_3 "
fi

if ! (ufw allow from $SERVER_1 to any port $ZK_SERVER_PORT_2 >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1); then
	log "Unable to open ufw port $ZK_SERVER_PORT_2 for $SERVER_1 "
fi
if ! (ufw allow from $SERVER_2 to any port $ZK_SERVER_PORT_2 >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1); then
	log "Unable to open ufw port $ZK_SERVER_PORT_2 for $SERVER_2 "
fi
if ! (ufw allow from $SERVER_3 to any port $ZK_SERVER_PORT_2 >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1); then
	log "Unable to open ufw port $ZK_SERVER_PORT_2 for $SERVER_3 "
fi

if ! (ufw allow from $SERVER_1 to any port $SOLR_SERVER_PORT >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1); then
	log "Unable to open ufw port $SOLR_SERVER_PORT for $SERVER_1 "
fi
if ! (ufw allow from $SERVER_2 to any port $SOLR_SERVER_PORT >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1); then
	log "Unable to open ufw port $SOLR_SERVER_PORT for $SERVER_2 "
fi
if ! (ufw allow from $SERVER_3 to any port $SOLR_SERVER_PORT >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1); then
	log "Unable to open ufw port $SOLR_SERVER_PORT for $SERVER_3 "
fi







##### Copy the jar file into the correct lib directory for D1 Authorization
if (cp /usr/share/dataone-cn-solr/d1_solr_extensions.jar ${SOLR_HOME}/server/solr-webapp/webapp/WEB-INF/lib/ >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1 ); then
    log "cp ${SOLR_HOME}/server/solr-webapp/webapp/WEB-INF/lib/d1_solr_extensions.jar succeeded"
fi

#### COPY A web.xml that configures authentication filters
#### MAKE THIS WORK WITH JETTY
if (mv /usr/share/solr/WEB-INF/web.xml /usr/share/solr/WEB-INF/web.xml.bak >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1 ); then
    log "mv /usr/share/solr/WEB-INF/web.xml succeeded"
fi

if (cp /usr/share/dataone-cn-solr/debian/web.xml /usr/share/solr/WEB-INF/ >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1 ); then
    log "cp /usr/share/dataone-cn-solr/debian/web.xml succeeded"
fi
##############







if [ ! -d /etc/dataone/event-index ]
then
	if (mkdir /etc/dataone/event-index >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1 ); then
        log "mkdir /etc/dataone/event-index succeeded"
    fi
fi

if (cp /usr/share/dataone-cn-solr/debian/eventIndexQueryFieldDescriptions.properties /etc/dataone/event-index/eventIndexQueryFieldDescriptions.properties >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1 ); then
    log "cp /usr/share/dataone-cn-solr/debian/eventIndexQueryFieldDescriptions.properties succeeded"
fi

if (cp /usr/share/dataone-cn-solr/debian/queryFieldDescriptions.properties /etc/dataone/index/solr/queryFieldDescriptions.properties >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1 ); then
    log "cp /usr/share/dataone-cn-solr/debian/queryFieldDescriptions.properties succeeded"
fi

##### Configure log output directory if not there
if [ ! -d /var/log/dataone/cn ]
then
	if (mkdir /var/log/dataone/cn >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1 ); then
    log "mkdir /var/log/dataone/cn succeeded"
    fi
fi

if (chown -R ${SOLR_USER}:${SOLR_USER} /var/log/dataone/cn >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1 ); then
    log "chown -R ${SOLR_USER}:${SOLR_USER} /var/log/dataone/cn succeeded"
fi
######


if ( cp /usr/share/dataone-cn-solr/debian/server_configs/event_log_proxy /etc/apache2/conf.d >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1 ); then
    log "cp /usr/share/dataone-cn-solr/debian/server_configs/event_log_proxy succeeded"
fi

if ( cp /usr/share/dataone-cn-solr/debian/server_configs/search_proxy /etc/apache2/conf.d >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1 ); then
    log "cp /usr/share/dataone-cn-solr/debian/server_configs/search_proxy succeeded"
fi

#if ( cp /usr/share/dataone-cn-solr/debian/proxy /etc/apache2/conf.d/ >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1 ); then
#    log "p /usr/share/dataone-cn-solr/debian/proxy succeeded"
#fi

if [ -e /etc/apache2/conf.d/rewrite_cnlog_localhost ]; then
  if ( rm /etc/apache2/conf.d/rewrite_cnlog_localhost >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1 ); then
    log "remove /usr/share/dataone-cn-solr/debian/rewrite_cnlog_localhost succeeded"
  fi
fi

/etc/init.d/zookeeper start
/etc/init.d/apache2 restart
/etc/init.d/solr start

###### TRY TO RELOAD THE CORE
if [ -z "$FRESH_SEARCH_CORE_INSTALL" ]; then
	if ! (curl "http://localhost:8983/solr/admin/cores?action=RELOAD&core=$SEARCH_CORE_NAME" >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1); then
		log "RELOAD of $SEARCH_CORE_NAME failed"
	fi
else
	if ! (${SOLR_ROOT}/bin/solr create -c ${SEARCH_CORE_NAME} -d ${SEARCH_CONFIGS_DIR} -rf 3 >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1); then
			log "ERROR creating solr core $SEARCH_CORE_NAME failed"
	fi
fi

if [ -z "$FRESH_EVENT_LOG_CORE_INSTALL" ]; then
	if ! (curl "http://localhost:8983/solr/admin/cores?action=RELOAD&core=$EVENT_LOG_CORE_NAME" >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1); then
		log "RELOAD of $EVENT_LOG_CORE_NAME failed"
	fi
else
	if ! (${SOLR_ROOT}/bin/solr create -c ${EVENT_LOG_CORE_NAME} -d ${EVENT_LOG_CONFIGS_DIR} -rf 3 >> ${D1_LOG_DIR}/${D1_LOG_FILE} 2>&1); then
		log "ERROR creating solr core $EVENT_LOG_CORE_NAME failed"
	fi
fi


## Update DateONE Version Info Doc
if ( java -jar /usr/share/dataone-cn-version-tool/dataone-cn-version-tool.jar -F/usr/share/dataone-cn-version-tool/version-tool.properties -html > /var/www/cn-version.html  2>/dev/null ); then
    log "dataone-cn-version-tool.jar succeeded"
fi
db_stop
exit 0
